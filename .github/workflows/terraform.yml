name: 'Terraform Plan/Apply'

on:
  # push:
  #   branches:
  #   - main
  pull_request:
    branches:
    - main

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        # creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Format
      run: terraform fmt

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: tf-plan
      run: |
        export exitcode=0
        terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?

        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        
        if [ $exitcode -eq 1 ]; then
          echo Terraform Plan Failed!
          exit 1
        else 
          exit 0
        fi
        
    # Save plan to artifacts  
    - name: Publish Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan
      
  # terraform-apply:
  #   name: 'Terraform Apply'
  #   if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == 2
  #   runs-on: ubuntu-latest
  #   environment: production
  #   needs: [terraform-plan]
    
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v3

  #   - name: Terraform Init
  #     run: terraform init

  #   - name: Download Terraform Plan
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: tfplan

  #   - name: Terraform Apply
  #     run: terraform apply -auto-approve tfplan
      